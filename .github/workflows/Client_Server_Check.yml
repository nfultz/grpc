name: gRPC Continuous Integration 1

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
jobs:
  Test-Code-Update:
    
    runs-on: ubuntu-18.04
    
    steps:
      
      - name: Get source code into virtual machine
        uses: actions/checkout@v2
        
      - name: Setup the master branch 
        uses: r-lib/actions/setup-r@master
        with:
            r-version: '3.6.1'
            
      - name: Cache openssl
        uses: actions/cache@v1
        id: cache-openssl
        with:
          path: "~/openssl"
          key: "openssl"
          
      - name: Install openssl
        env:
          CACHE_HIT: ${{steps.cache-openssl.outputs.cache-hit}}
        run: |
          if [[ "$CACHE_HIT" == 'true' ]]; then
            sudo cp --verbose --force --recursive ~/openssl/* /
          else
            sudo apt-get install libcurl4-openssl-dev
          fi

      - name: Cache proto
        uses: actions/cache@v1
        id: cache-proto
        with:
          path: "~/proto"
          key: "proto"
          
      - name: Install proto
        env:
          CACHE_HIT: ${{steps.cache-proto.outputs.cache-hit}}
        run: |
          if [[ "$CACHE_HIT" == 'true' ]]; then
            sudo cp --verbose --force --recursive ~/proto/* /
          else
            sudo apt-get install libprotoc-dev
          fi

      - name: Cache grpcbase
        uses: actions/cache@v1
        id: cache-grpcbase
        with:
          path: "~/grpcbase"
          key: "grpcbase"
          
      - name: Install grpcbase
        env:
          CACHE_HIT: ${{steps.cache-grpcbase.outputs.cache-hit}}
        run: |
          if [[ "$CACHE_HIT" == 'true' ]]; then
            sudo cp --verbose --force --recursive ~/grpcbase/* /
          else
            git clone -b $(curl -L https://grpc.io/release) https://github.com/grpc/grpc grpc_base		
          fi
          
      - name: Cache makeconfig
        uses: actions/cache@v1
        id: cache-makeconfig
        with:
          path: "~/makeconfig"
          key: "makeconfig"
          
      - name: Install makeconfig
        env:
          CACHE_HIT: ${{steps.cache-makeconfig.outputs.cache-hit}}
        run: |
          if [[ "$CACHE_HIT" == 'true' ]]; then
            sudo cp --verbose --force --recursive ~/makeconfig/* /
          else
            cd grpc_base
            git submodule update --init
            make
            sudo make install
            sudo ldconfig
          fi
